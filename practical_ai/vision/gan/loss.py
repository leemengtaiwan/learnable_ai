# AUTOGENERATED! DO NOT EDIT! File to edit: notebooks/vision.gan.loss.ipynb (unless otherwise specified).

__all__ = ['logger', 'get_gan_losses_fns', 'get_lsgan_losses_fns', 'get_adversarial_losses_fns']


# Cell
import torch
import logging
from torch import nn


logger = logging.getLogger()
logger.setLevel("INFO")


# Cell
def get_gan_losses_fns(is_logits=True, on_gpu=False):
    if is_logits:
        bce = nn.BCEWithLogitsLoss()
    else:
        bce = nn.BCELoss()

    def g_loss_fn(fake_logits, on_gpu=False):
        ones = torch.ones_like(fake_logits)
        if on_gpu:
            ones = ones.cuda(fake_logits.device.index)
        return bce(fake_logits, ones)

    def d_loss_fn(real_logits, fake_logits, on_gpu=False):
        ones = torch.ones_like(real_logits)
        zeros = torch.zeros_like(fake_logits)

        if on_gpu:
            ones = ones.cuda(real_logits.device.index)
            zeros = zeros.cuda(fake_logits.device.index)

        real_loss = bce(real_logits, ones)
        fake_loss = bce(fake_logits, zeros)
        return real_loss, fake_loss

    return g_loss_fn, d_loss_fn


# Cell
def get_lsgan_losses_fns(is_logits=True, on_gpu=False):
    mse = nn.MSELoss()

    def g_loss_fn(fake_logits, on_gpu=False):
        ones = torch.ones_like(fake_logits)
        if on_gpu:
            ones = ones.cuda(fake_logits.device.index)
        return mse(fake_logits, ones)

    def d_loss_fn(real_logits, fake_logits, on_gpu=False):
        ones = torch.ones_like(real_logits)
        zeros = torch.zeros_like(fake_logits)

        if on_gpu:
            ones = ones.cuda(real_logits.device.index)
            zeros = zeros.cuda(fake_logits.device.index)

        real_loss = mse(real_logits, ones)
        fake_loss = mse(fake_logits, zeros)
        return real_loss, fake_loss

    return g_loss_fn, d_loss_fn


# Cell
def get_adversarial_losses_fns(_type, is_logits=True, on_gpu=False):
    if _type == "gan":
        fn = get_gan_losses_fns
    elif _type == "lsgan":
        fn = get_lsgan_losses_fns
    else:
        raise NotImplementedError

    return fn(is_logits=is_logits, on_gpu=on_gpu)